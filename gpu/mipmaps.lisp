(in-package :nineveh)

(defun-g mipmap-level->color ((tex :sampler-2d) (uv :vec2))
  (let ((result (v! #x23 #x2C #x16))
	(level (uint (x (texture-query-lod tex uv)))))
    (switch level
      (0 (setf result (v! #xFF #xB3 #x00)))
      (1 (setf result (v! #x80 #x3E #x75)))
      (2 (setf result (v! #xFF #x68 #x00)))
      (3 (setf result (v! #xA6 #xBD #xD7)))
      (4 (setf result (v! #xC1 #x00 #x20)))
      (5 (setf result (v! #xCE #xA2 #x62)))
      (6 (setf result (v! #x81 #x70 #x66)))
      (7 (setf result (v! #x00 #x7D #x34)))
      (8 (setf result (v! #xF6 #x76 #x8E)))
      (9 (setf result (v! #x00 #x53 #x8A)))
      (20 (setf result (v! #xFF #x7A #x5C)))
      (21 (setf result (v! #x53 #x37 #x7A)))
      (22 (setf result (v! #xFF #x8E #x00)))
      (23 (setf result (v! #xB3 #x28 #x51)))
      (24 (setf result (v! #xF4 #xC8 #x00)))
      (25 (setf result (v! #x7F #x18 #x0D)))
      (26 (setf result (v! #x93 #xAA #x00)))
      (27 (setf result (v! #x59 #x33 #x15)))
      (28 (setf result (v! #xF1 #x3A #x13))))
    result))

(defun-g mipmap-level->grey ((tex :sampler-2d) (uv :vec2))
  (let ((level (x (texture-query-lod tex uv))))
    (v3! (/ (min level 10s0) 10s0))))
